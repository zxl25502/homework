class Solution {
    public boolean search(int[] nums, int target) {
        int left = 0, right = nums.length - 1;
        while(left <= right){
            int mid = left + (right - left) / 2;
            if(nums[mid] == target){return true;}


            if(nums[mid] == nums[left]){
                left++;
            }
            else if(nums[mid] == nums[right]){
                right--;
            }
            else if(nums[mid] > nums[left]){
                if(target >= nums[left] && target < nums[mid])
                {
                    right = mid - 1;
                }
                else{
                    left = mid + 1;
                }
            } else {
                if(target <= nums[right] && target > nums[mid]){
                    left = mid + 1;
                }
                else{
                    right = mid - 1;
                }
            }
        }
        if(left >= 0 && left < nums.length && nums[left] == target){return true;}
        if(right >= 0 && right < nums.length && nums[right] == target){return true;}
        return false;
    }
}