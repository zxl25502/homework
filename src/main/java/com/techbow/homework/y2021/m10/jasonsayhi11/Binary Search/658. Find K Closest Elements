class Solution {
    public List<Integer> findClosestElements(int[] arr, int k, int x) {
        List<Integer> res = new ArrayList<>();
        if (arr == null || arr.length == 0) {
            return res;
        }
        int l, r;
        l = r = bs(arr, x);

        while (k-- > 0) {
            if(r >= arr.length || l > 0 && x - arr[l - 1] <= arr[r] - x){
                l-=1;
            }
            else{
                r+=1;
            }
        }
        for(int i = l; i < r; i++){
            res.add(arr[i]);
        }
        return res;
    }
    private int bs(int[] arr, int x) {
        int left = 0;
        int right = arr.length - 1;
        while(left + 1 < right) {
            int mid = left + (right - left) / 2;
            if(arr[mid] == x) {
                return mid;
            }
            if(arr[mid] < x) {
                left = mid;
            }
            else{
                right = mid;
            }
        }
        if(arr[left] > x) return left;
        if(arr[left] == x) return left;
        if(x > arr[left] && x < arr[right]) return left + 1;
        if(arr[right] == x) return right;
        if(arr[right] < x) return right + 1;
        return -500;
    }
}