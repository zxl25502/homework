// 为什么nums[mid] >= nums[left]？
// 例如nums: [3,1], target: 1, 此时，mid = left = 0。
// 我们需要检查right pointer。并且此时target < nums[mid] && target >= nums[left] 和 target > nums[mid] && target <= nums[right] 都不成立。
// 我们要让left = mid + 1。需要进入nums[mid] >= nums[left]的循环。

class Solution {
    public int search(int[] nums, int target) {
        if (nums == null || nums.length == 0) {
            return -1;
        }

        int left = 0;
        int right = nums.length - 1;
        while (left <= right) {
            int mid = left + (right - left) / 2;
            if (nums[mid] == target) {
                return mid;
            }
            if (nums[mid] >= nums[left]) {
                if (target < nums[mid] && target >= nums[left]) {
                    right = mid - 1;
                }
                else {
                    left = mid + 1;
                }
            }
            else {
                if(target > nums[mid] && target <= nums[right]) {
                    left = mid + 1;
                }
                else{
                    right = mid - 1;
                }
            }
        }

        return -1;
    }
}